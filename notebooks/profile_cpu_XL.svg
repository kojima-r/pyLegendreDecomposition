<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1562" onload="init(evt)" viewBox="0 0 1200 1562" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1562" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile_cpu_XL.svg -- benchmark_random 20 20 20 20 20 20</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1551.00"> </text><svg id="frames" x="10" width="1180" total_samples="1676"><g><title>&lt;module&gt; (benchmark_random.py:6) (2 samples, 0.12%)</title><rect x="0.0000%" y="164" width="0.1193%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.0000%" y="180" width="0.1193%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.0000%" y="196" width="0.1193%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.0000%" y="212" width="0.1193%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.0000%" y="228" width="0.1193%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.0000%" y="244" width="0.1193%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (cupy/__init__.py:10) (3 samples, 0.18%)</title><rect x="0.1193%" y="452" width="0.1790%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="3"/><text x="0.3693%" y="462.50"></text></g><g><title>_detect_duplicate_installation (cupy/_environment.py:482) (3 samples, 0.18%)</title><rect x="0.1193%" y="468" width="0.1790%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="3"/><text x="0.3693%" y="478.50"></text></g><g><title>&lt;setcomp&gt; (cupy/_environment.py:482) (3 samples, 0.18%)</title><rect x="0.1193%" y="484" width="0.1790%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="3"/><text x="0.3693%" y="494.50"></text></g><g><title>metadata (importlib/metadata/__init__.py:612) (2 samples, 0.12%)</title><rect x="0.1790%" y="500" width="0.1193%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="2"/><text x="0.4290%" y="510.50"></text></g><g><title>message_from_string (email/__init__.py:38) (2 samples, 0.12%)</title><rect x="0.1790%" y="516" width="0.1193%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="2"/><text x="0.4290%" y="526.50"></text></g><g><title>parsestr (email/parser.py:67) (2 samples, 0.12%)</title><rect x="0.1790%" y="532" width="0.1193%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="2"/><text x="0.4290%" y="542.50"></text></g><g><title>parse (email/parser.py:56) (2 samples, 0.12%)</title><rect x="0.1790%" y="548" width="0.1193%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="2"/><text x="0.4290%" y="558.50"></text></g><g><title>feed (email/feedparser.py:175) (2 samples, 0.12%)</title><rect x="0.1790%" y="564" width="0.1193%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="2"/><text x="0.4290%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.3580%" y="1268" width="0.1193%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="2"/><text x="0.6080%" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.3580%" y="1284" width="0.1193%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="2"/><text x="0.6080%" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.3580%" y="1300" width="0.1193%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="2"/><text x="0.6080%" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.3580%" y="1316" width="0.1193%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="2"/><text x="0.6080%" y="1326.50"></text></g><g><title>&lt;module&gt; (cupy/__init__.py:34) (4 samples, 0.24%)</title><rect x="0.3580%" y="452" width="0.2387%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="4"/><text x="0.6080%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.3580%" y="468" width="0.2387%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="4"/><text x="0.6080%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.24%)</title><rect x="0.3580%" y="484" width="0.2387%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="4"/><text x="0.6080%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.24%)</title><rect x="0.3580%" y="500" width="0.2387%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="4"/><text x="0.6080%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.24%)</title><rect x="0.3580%" y="516" width="0.2387%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="4"/><text x="0.6080%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.3580%" y="532" width="0.2387%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="4"/><text x="0.6080%" y="542.50"></text></g><g><title>&lt;module&gt; (cupyx/__init__.py:8) (4 samples, 0.24%)</title><rect x="0.3580%" y="548" width="0.2387%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="4"/><text x="0.6080%" y="558.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (4 samples, 0.24%)</title><rect x="0.3580%" y="564" width="0.2387%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="4"/><text x="0.6080%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.3580%" y="580" width="0.2387%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="4"/><text x="0.6080%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.3580%" y="596" width="0.2387%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="4"/><text x="0.6080%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.24%)</title><rect x="0.3580%" y="612" width="0.2387%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="4"/><text x="0.6080%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.24%)</title><rect x="0.3580%" y="628" width="0.2387%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="4"/><text x="0.6080%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.24%)</title><rect x="0.3580%" y="644" width="0.2387%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="4"/><text x="0.6080%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.3580%" y="660" width="0.2387%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="4"/><text x="0.6080%" y="670.50"></text></g><g><title>&lt;module&gt; (cupyx/linalg/__init__.py:2) (4 samples, 0.24%)</title><rect x="0.3580%" y="676" width="0.2387%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="4"/><text x="0.6080%" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (4 samples, 0.24%)</title><rect x="0.3580%" y="692" width="0.2387%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="4"/><text x="0.6080%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.3580%" y="708" width="0.2387%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="4"/><text x="0.6080%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.3580%" y="724" width="0.2387%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="4"/><text x="0.6080%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.24%)</title><rect x="0.3580%" y="740" width="0.2387%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="4"/><text x="0.6080%" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.24%)</title><rect x="0.3580%" y="756" width="0.2387%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="4"/><text x="0.6080%" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.24%)</title><rect x="0.3580%" y="772" width="0.2387%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="4"/><text x="0.6080%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.3580%" y="788" width="0.2387%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="4"/><text x="0.6080%" y="798.50"></text></g><g><title>&lt;module&gt; (cupyx/linalg/sparse/__init__.py:3) (4 samples, 0.24%)</title><rect x="0.3580%" y="804" width="0.2387%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="4"/><text x="0.6080%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.3580%" y="820" width="0.2387%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="4"/><text x="0.6080%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.24%)</title><rect x="0.3580%" y="836" width="0.2387%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="4"/><text x="0.6080%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.24%)</title><rect x="0.3580%" y="852" width="0.2387%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="4"/><text x="0.6080%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.24%)</title><rect x="0.3580%" y="868" width="0.2387%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="4"/><text x="0.6080%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.3580%" y="884" width="0.2387%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="4"/><text x="0.6080%" y="894.50"></text></g><g><title>&lt;module&gt; (cupyx/linalg/sparse/_solve.py:6) (4 samples, 0.24%)</title><rect x="0.3580%" y="900" width="0.2387%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="4"/><text x="0.6080%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.3580%" y="916" width="0.2387%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="4"/><text x="0.6080%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.24%)</title><rect x="0.3580%" y="932" width="0.2387%" height="15" fill="rgb(239,60,40)" fg:x="6" fg:w="4"/><text x="0.6080%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.24%)</title><rect x="0.3580%" y="948" width="0.2387%" height="15" fill="rgb(206,27,48)" fg:x="6" fg:w="4"/><text x="0.6080%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.24%)</title><rect x="0.3580%" y="964" width="0.2387%" height="15" fill="rgb(225,35,8)" fg:x="6" fg:w="4"/><text x="0.6080%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.3580%" y="980" width="0.2387%" height="15" fill="rgb(250,213,24)" fg:x="6" fg:w="4"/><text x="0.6080%" y="990.50"></text></g><g><title>&lt;module&gt; (cupyx/scipy/__init__.py:4) (4 samples, 0.24%)</title><rect x="0.3580%" y="996" width="0.2387%" height="15" fill="rgb(247,123,22)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.3580%" y="1012" width="0.2387%" height="15" fill="rgb(231,138,38)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (4 samples, 0.24%)</title><rect x="0.3580%" y="1028" width="0.2387%" height="15" fill="rgb(231,145,46)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.3580%" y="1044" width="0.2387%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.3580%" y="1060" width="0.2387%" height="15" fill="rgb(217,147,25)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.24%)</title><rect x="0.3580%" y="1076" width="0.2387%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.24%)</title><rect x="0.3580%" y="1092" width="0.2387%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.24%)</title><rect x="0.3580%" y="1108" width="0.2387%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.3580%" y="1124" width="0.2387%" height="15" fill="rgb(248,47,43)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1134.50"></text></g><g><title>&lt;module&gt; (cupyx/scipy/sparse/__init__.py:1) (4 samples, 0.24%)</title><rect x="0.3580%" y="1140" width="0.2387%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.3580%" y="1156" width="0.2387%" height="15" fill="rgb(210,229,1)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.24%)</title><rect x="0.3580%" y="1172" width="0.2387%" height="15" fill="rgb(222,148,37)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.24%)</title><rect x="0.3580%" y="1188" width="0.2387%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.24%)</title><rect x="0.3580%" y="1204" width="0.2387%" height="15" fill="rgb(247,98,35)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.3580%" y="1220" width="0.2387%" height="15" fill="rgb(247,138,52)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1230.50"></text></g><g><title>&lt;module&gt; (cupyx/scipy/sparse/_base.py:10) (4 samples, 0.24%)</title><rect x="0.3580%" y="1236" width="0.2387%" height="15" fill="rgb(213,79,30)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.3580%" y="1252" width="0.2387%" height="15" fill="rgb(246,177,23)" fg:x="6" fg:w="4"/><text x="0.6080%" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (2 samples, 0.12%)</title><rect x="0.4773%" y="1268" width="0.1193%" height="15" fill="rgb(230,62,27)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.4773%" y="1284" width="0.1193%" height="15" fill="rgb(216,154,8)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.4773%" y="1300" width="0.1193%" height="15" fill="rgb(244,35,45)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.4773%" y="1316" width="0.1193%" height="15" fill="rgb(251,115,12)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.4773%" y="1332" width="0.1193%" height="15" fill="rgb(240,54,50)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.4773%" y="1348" width="0.1193%" height="15" fill="rgb(233,84,52)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.4773%" y="1364" width="0.1193%" height="15" fill="rgb(207,117,47)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1374.50"></text></g><g><title>&lt;module&gt; (scipy/__init__.py:69) (2 samples, 0.12%)</title><rect x="0.4773%" y="1380" width="0.1193%" height="15" fill="rgb(249,43,39)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.4773%" y="1396" width="0.1193%" height="15" fill="rgb(209,38,44)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.4773%" y="1412" width="0.1193%" height="15" fill="rgb(236,212,23)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.4773%" y="1428" width="0.1193%" height="15" fill="rgb(242,79,21)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.4773%" y="1444" width="0.1193%" height="15" fill="rgb(211,96,35)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.4773%" y="1460" width="0.1193%" height="15" fill="rgb(253,215,40)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1470.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/__init__.py:12) (2 samples, 0.12%)</title><rect x="0.4773%" y="1476" width="0.1193%" height="15" fill="rgb(211,81,21)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.4773%" y="1492" width="0.1193%" height="15" fill="rgb(208,190,38)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.4773%" y="1508" width="0.1193%" height="15" fill="rgb(235,213,38)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.4773%" y="1524" width="0.1193%" height="15" fill="rgb(237,122,38)" fg:x="8" fg:w="2"/><text x="0.7273%" y="1534.50"></text></g><g><title>&lt;module&gt; (pytest/__init__.py:5) (2 samples, 0.12%)</title><rect x="0.7160%" y="868" width="0.1193%" height="15" fill="rgb(244,218,35)" fg:x="12" fg:w="2"/><text x="0.9660%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.7160%" y="884" width="0.1193%" height="15" fill="rgb(240,68,47)" fg:x="12" fg:w="2"/><text x="0.9660%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.7160%" y="900" width="0.1193%" height="15" fill="rgb(210,16,53)" fg:x="12" fg:w="2"/><text x="0.9660%" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.7160%" y="916" width="0.1193%" height="15" fill="rgb(235,124,12)" fg:x="12" fg:w="2"/><text x="0.9660%" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.7160%" y="932" width="0.1193%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="2"/><text x="0.9660%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.7160%" y="948" width="0.1193%" height="15" fill="rgb(250,166,2)" fg:x="12" fg:w="2"/><text x="0.9660%" y="958.50"></text></g><g><title>&lt;module&gt; (_pytest/_code/__init__.py:3) (2 samples, 0.12%)</title><rect x="0.7160%" y="964" width="0.1193%" height="15" fill="rgb(242,216,29)" fg:x="12" fg:w="2"/><text x="0.9660%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.7160%" y="980" width="0.1193%" height="15" fill="rgb(230,116,27)" fg:x="12" fg:w="2"/><text x="0.9660%" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.7160%" y="996" width="0.1193%" height="15" fill="rgb(228,99,48)" fg:x="12" fg:w="2"/><text x="0.9660%" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.7160%" y="1012" width="0.1193%" height="15" fill="rgb(253,11,6)" fg:x="12" fg:w="2"/><text x="0.9660%" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.7160%" y="1028" width="0.1193%" height="15" fill="rgb(247,143,39)" fg:x="12" fg:w="2"/><text x="0.9660%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.7160%" y="1044" width="0.1193%" height="15" fill="rgb(236,97,10)" fg:x="12" fg:w="2"/><text x="0.9660%" y="1054.50"></text></g><g><title>&lt;module&gt; (cupy/__init__.py:51) (7 samples, 0.42%)</title><rect x="0.6563%" y="452" width="0.4177%" height="15" fill="rgb(233,208,19)" fg:x="11" fg:w="7"/><text x="0.9063%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (7 samples, 0.42%)</title><rect x="0.6563%" y="468" width="0.4177%" height="15" fill="rgb(216,164,2)" fg:x="11" fg:w="7"/><text x="0.9063%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.42%)</title><rect x="0.6563%" y="484" width="0.4177%" height="15" fill="rgb(220,129,5)" fg:x="11" fg:w="7"/><text x="0.9063%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (7 samples, 0.42%)</title><rect x="0.6563%" y="500" width="0.4177%" height="15" fill="rgb(242,17,10)" fg:x="11" fg:w="7"/><text x="0.9063%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (7 samples, 0.42%)</title><rect x="0.6563%" y="516" width="0.4177%" height="15" fill="rgb(242,107,0)" fg:x="11" fg:w="7"/><text x="0.9063%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (7 samples, 0.42%)</title><rect x="0.6563%" y="532" width="0.4177%" height="15" fill="rgb(251,28,31)" fg:x="11" fg:w="7"/><text x="0.9063%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (7 samples, 0.42%)</title><rect x="0.6563%" y="548" width="0.4177%" height="15" fill="rgb(233,223,10)" fg:x="11" fg:w="7"/><text x="0.9063%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.42%)</title><rect x="0.6563%" y="564" width="0.4177%" height="15" fill="rgb(215,21,27)" fg:x="11" fg:w="7"/><text x="0.9063%" y="574.50"></text></g><g><title>&lt;module&gt; (cupy/testing/__init__.py:8) (6 samples, 0.36%)</title><rect x="0.7160%" y="580" width="0.3580%" height="15" fill="rgb(232,23,21)" fg:x="12" fg:w="6"/><text x="0.9660%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (6 samples, 0.36%)</title><rect x="0.7160%" y="596" width="0.3580%" height="15" fill="rgb(244,5,23)" fg:x="12" fg:w="6"/><text x="0.9660%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (6 samples, 0.36%)</title><rect x="0.7160%" y="612" width="0.3580%" height="15" fill="rgb(226,81,46)" fg:x="12" fg:w="6"/><text x="0.9660%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (6 samples, 0.36%)</title><rect x="0.7160%" y="628" width="0.3580%" height="15" fill="rgb(247,70,30)" fg:x="12" fg:w="6"/><text x="0.9660%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (6 samples, 0.36%)</title><rect x="0.7160%" y="644" width="0.3580%" height="15" fill="rgb(212,68,19)" fg:x="12" fg:w="6"/><text x="0.9660%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (6 samples, 0.36%)</title><rect x="0.7160%" y="660" width="0.3580%" height="15" fill="rgb(240,187,13)" fg:x="12" fg:w="6"/><text x="0.9660%" y="670.50"></text></g><g><title>&lt;module&gt; (cupy/testing/_attr.py:4) (6 samples, 0.36%)</title><rect x="0.7160%" y="676" width="0.3580%" height="15" fill="rgb(223,113,26)" fg:x="12" fg:w="6"/><text x="0.9660%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (6 samples, 0.36%)</title><rect x="0.7160%" y="692" width="0.3580%" height="15" fill="rgb(206,192,2)" fg:x="12" fg:w="6"/><text x="0.9660%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (6 samples, 0.36%)</title><rect x="0.7160%" y="708" width="0.3580%" height="15" fill="rgb(241,108,4)" fg:x="12" fg:w="6"/><text x="0.9660%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (6 samples, 0.36%)</title><rect x="0.7160%" y="724" width="0.3580%" height="15" fill="rgb(247,173,49)" fg:x="12" fg:w="6"/><text x="0.9660%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (6 samples, 0.36%)</title><rect x="0.7160%" y="740" width="0.3580%" height="15" fill="rgb(224,114,35)" fg:x="12" fg:w="6"/><text x="0.9660%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (6 samples, 0.36%)</title><rect x="0.7160%" y="756" width="0.3580%" height="15" fill="rgb(245,159,27)" fg:x="12" fg:w="6"/><text x="0.9660%" y="766.50"></text></g><g><title>&lt;module&gt; (cupy/testing/_pytest_impl.py:6) (6 samples, 0.36%)</title><rect x="0.7160%" y="772" width="0.3580%" height="15" fill="rgb(245,172,44)" fg:x="12" fg:w="6"/><text x="0.9660%" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (6 samples, 0.36%)</title><rect x="0.7160%" y="788" width="0.3580%" height="15" fill="rgb(236,23,11)" fg:x="12" fg:w="6"/><text x="0.9660%" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (6 samples, 0.36%)</title><rect x="0.7160%" y="804" width="0.3580%" height="15" fill="rgb(205,117,38)" fg:x="12" fg:w="6"/><text x="0.9660%" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (6 samples, 0.36%)</title><rect x="0.7160%" y="820" width="0.3580%" height="15" fill="rgb(237,72,25)" fg:x="12" fg:w="6"/><text x="0.9660%" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (6 samples, 0.36%)</title><rect x="0.7160%" y="836" width="0.3580%" height="15" fill="rgb(244,70,9)" fg:x="12" fg:w="6"/><text x="0.9660%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (6 samples, 0.36%)</title><rect x="0.7160%" y="852" width="0.3580%" height="15" fill="rgb(217,125,39)" fg:x="12" fg:w="6"/><text x="0.9660%" y="862.50"></text></g><g><title>&lt;module&gt; (pytest/__init__.py:6) (4 samples, 0.24%)</title><rect x="0.8353%" y="868" width="0.2387%" height="15" fill="rgb(235,36,10)" fg:x="14" fg:w="4"/><text x="1.0853%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.8353%" y="884" width="0.2387%" height="15" fill="rgb(251,123,47)" fg:x="14" fg:w="4"/><text x="1.0853%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.24%)</title><rect x="0.8353%" y="900" width="0.2387%" height="15" fill="rgb(221,13,13)" fg:x="14" fg:w="4"/><text x="1.0853%" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.24%)</title><rect x="0.8353%" y="916" width="0.2387%" height="15" fill="rgb(238,131,9)" fg:x="14" fg:w="4"/><text x="1.0853%" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.24%)</title><rect x="0.8353%" y="932" width="0.2387%" height="15" fill="rgb(211,50,8)" fg:x="14" fg:w="4"/><text x="1.0853%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.8353%" y="948" width="0.2387%" height="15" fill="rgb(245,182,24)" fg:x="14" fg:w="4"/><text x="1.0853%" y="958.50"></text></g><g><title>&lt;module&gt; (_pytest/assertion/__init__.py:10) (4 samples, 0.24%)</title><rect x="0.8353%" y="964" width="0.2387%" height="15" fill="rgb(242,14,37)" fg:x="14" fg:w="4"/><text x="1.0853%" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (4 samples, 0.24%)</title><rect x="0.8353%" y="980" width="0.2387%" height="15" fill="rgb(246,228,12)" fg:x="14" fg:w="4"/><text x="1.0853%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.8353%" y="996" width="0.2387%" height="15" fill="rgb(213,55,15)" fg:x="14" fg:w="4"/><text x="1.0853%" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.24%)</title><rect x="0.8353%" y="1012" width="0.2387%" height="15" fill="rgb(209,9,3)" fg:x="14" fg:w="4"/><text x="1.0853%" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.24%)</title><rect x="0.8353%" y="1028" width="0.2387%" height="15" fill="rgb(230,59,30)" fg:x="14" fg:w="4"/><text x="1.0853%" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.24%)</title><rect x="0.8353%" y="1044" width="0.2387%" height="15" fill="rgb(209,121,21)" fg:x="14" fg:w="4"/><text x="1.0853%" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.24%)</title><rect x="0.8353%" y="1060" width="0.2387%" height="15" fill="rgb(220,109,13)" fg:x="14" fg:w="4"/><text x="1.0853%" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.24%)</title><rect x="0.8353%" y="1076" width="0.2387%" height="15" fill="rgb(232,18,1)" fg:x="14" fg:w="4"/><text x="1.0853%" y="1086.50"></text></g><g><title>&lt;module&gt; (_pytest/assertion/rewrite.py:38) (3 samples, 0.18%)</title><rect x="0.8950%" y="1092" width="0.1790%" height="15" fill="rgb(215,41,42)" fg:x="15" fg:w="3"/><text x="1.1450%" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.18%)</title><rect x="0.8950%" y="1108" width="0.1790%" height="15" fill="rgb(224,123,36)" fg:x="15" fg:w="3"/><text x="1.1450%" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.18%)</title><rect x="0.8950%" y="1124" width="0.1790%" height="15" fill="rgb(240,125,3)" fg:x="15" fg:w="3"/><text x="1.1450%" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.18%)</title><rect x="0.8950%" y="1140" width="0.1790%" height="15" fill="rgb(205,98,50)" fg:x="15" fg:w="3"/><text x="1.1450%" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.18%)</title><rect x="0.8950%" y="1156" width="0.1790%" height="15" fill="rgb(205,185,37)" fg:x="15" fg:w="3"/><text x="1.1450%" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.18%)</title><rect x="0.8950%" y="1172" width="0.1790%" height="15" fill="rgb(238,207,15)" fg:x="15" fg:w="3"/><text x="1.1450%" y="1182.50"></text></g><g><title>&lt;module&gt; (benchmark_random:3) (20 samples, 1.19%)</title><rect x="0.0000%" y="68" width="1.1933%" height="15" fill="rgb(213,199,42)" fg:x="0" fg:w="20"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (20 samples, 1.19%)</title><rect x="0.0000%" y="84" width="1.1933%" height="15" fill="rgb(235,201,11)" fg:x="0" fg:w="20"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (20 samples, 1.19%)</title><rect x="0.0000%" y="100" width="1.1933%" height="15" fill="rgb(207,46,11)" fg:x="0" fg:w="20"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (20 samples, 1.19%)</title><rect x="0.0000%" y="116" width="1.1933%" height="15" fill="rgb(241,35,35)" fg:x="0" fg:w="20"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (20 samples, 1.19%)</title><rect x="0.0000%" y="132" width="1.1933%" height="15" fill="rgb(243,32,47)" fg:x="0" fg:w="20"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (20 samples, 1.19%)</title><rect x="0.0000%" y="148" width="1.1933%" height="15" fill="rgb(247,202,23)" fg:x="0" fg:w="20"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (benchmark_random.py:8) (18 samples, 1.07%)</title><rect x="0.1193%" y="164" width="1.0740%" height="15" fill="rgb(219,102,11)" fg:x="2" fg:w="18"/><text x="0.3693%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 1.07%)</title><rect x="0.1193%" y="180" width="1.0740%" height="15" fill="rgb(243,110,44)" fg:x="2" fg:w="18"/><text x="0.3693%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 1.07%)</title><rect x="0.1193%" y="196" width="1.0740%" height="15" fill="rgb(222,74,54)" fg:x="2" fg:w="18"/><text x="0.3693%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 1.07%)</title><rect x="0.1193%" y="212" width="1.0740%" height="15" fill="rgb(216,99,12)" fg:x="2" fg:w="18"/><text x="0.3693%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 1.07%)</title><rect x="0.1193%" y="228" width="1.0740%" height="15" fill="rgb(226,22,26)" fg:x="2" fg:w="18"/><text x="0.3693%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 1.07%)</title><rect x="0.1193%" y="244" width="1.0740%" height="15" fill="rgb(217,163,10)" fg:x="2" fg:w="18"/><text x="0.3693%" y="254.50"></text></g><g><title>&lt;module&gt; (manybodytensor/__init__.py:1) (18 samples, 1.07%)</title><rect x="0.1193%" y="260" width="1.0740%" height="15" fill="rgb(213,25,53)" fg:x="2" fg:w="18"/><text x="0.3693%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 1.07%)</title><rect x="0.1193%" y="276" width="1.0740%" height="15" fill="rgb(252,105,26)" fg:x="2" fg:w="18"/><text x="0.3693%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 1.07%)</title><rect x="0.1193%" y="292" width="1.0740%" height="15" fill="rgb(220,39,43)" fg:x="2" fg:w="18"/><text x="0.3693%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 1.07%)</title><rect x="0.1193%" y="308" width="1.0740%" height="15" fill="rgb(229,68,48)" fg:x="2" fg:w="18"/><text x="0.3693%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 1.07%)</title><rect x="0.1193%" y="324" width="1.0740%" height="15" fill="rgb(252,8,32)" fg:x="2" fg:w="18"/><text x="0.3693%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 1.07%)</title><rect x="0.1193%" y="340" width="1.0740%" height="15" fill="rgb(223,20,43)" fg:x="2" fg:w="18"/><text x="0.3693%" y="350.50"></text></g><g><title>&lt;module&gt; (manybodytensor/module.py:3) (18 samples, 1.07%)</title><rect x="0.1193%" y="356" width="1.0740%" height="15" fill="rgb(229,81,49)" fg:x="2" fg:w="18"/><text x="0.3693%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 1.07%)</title><rect x="0.1193%" y="372" width="1.0740%" height="15" fill="rgb(236,28,36)" fg:x="2" fg:w="18"/><text x="0.3693%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 1.07%)</title><rect x="0.1193%" y="388" width="1.0740%" height="15" fill="rgb(249,185,26)" fg:x="2" fg:w="18"/><text x="0.3693%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 1.07%)</title><rect x="0.1193%" y="404" width="1.0740%" height="15" fill="rgb(249,174,33)" fg:x="2" fg:w="18"/><text x="0.3693%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 1.07%)</title><rect x="0.1193%" y="420" width="1.0740%" height="15" fill="rgb(233,201,37)" fg:x="2" fg:w="18"/><text x="0.3693%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 1.07%)</title><rect x="0.1193%" y="436" width="1.0740%" height="15" fill="rgb(221,78,26)" fg:x="2" fg:w="18"/><text x="0.3693%" y="446.50"></text></g><g><title>main (benchmark_random.py:23) (29 samples, 1.73%)</title><rect x="1.1933%" y="84" width="1.7303%" height="15" fill="rgb(250,127,30)" fg:x="20" fg:w="29"/><text x="1.4433%" y="94.50"></text></g><g><title>default_B (manybodytensor/utils.py:22) (25 samples, 1.49%)</title><rect x="3.1026%" y="116" width="1.4916%" height="15" fill="rgb(230,49,44)" fg:x="52" fg:w="25"/><text x="3.3526%" y="126.50"></text></g><g><title>indices (numpy/core/numeric.py:1772) (25 samples, 1.49%)</title><rect x="3.1026%" y="132" width="1.4916%" height="15" fill="rgb(229,67,23)" fg:x="52" fg:w="25"/><text x="3.3526%" y="142.50"></text></g><g><title>default_B (manybodytensor/utils.py:23) (28 samples, 1.67%)</title><rect x="4.5943%" y="116" width="1.6706%" height="15" fill="rgb(249,83,47)" fg:x="77" fg:w="28"/><text x="4.8443%" y="126.50"></text></g><g><title>_sum (numpy/core/_methods.py:49) (13 samples, 0.78%)</title><rect x="5.4893%" y="132" width="0.7757%" height="15" fill="rgb(215,43,3)" fg:x="92" fg:w="13"/><text x="5.7393%" y="142.50"></text></g><g><title>MBTA (manybodytensor/module.py:112) (56 samples, 3.34%)</title><rect x="3.1026%" y="100" width="3.3413%" height="15" fill="rgb(238,154,13)" fg:x="52" fg:w="56"/><text x="3.3526%" y="110.50">MBT..</text></g><g><title>default_B (manybodytensor/utils.py:24) (3 samples, 0.18%)</title><rect x="6.2649%" y="116" width="0.1790%" height="15" fill="rgb(219,56,2)" fg:x="105" fg:w="3"/><text x="6.5149%" y="126.50"></text></g><g><title>MBTA (manybodytensor/module.py:119) (5 samples, 0.30%)</title><rect x="6.4439%" y="100" width="0.2983%" height="15" fill="rgb(233,0,4)" fg:x="108" fg:w="5"/><text x="6.6939%" y="110.50"></text></g><g><title>MBTA (manybodytensor/module.py:120) (6 samples, 0.36%)</title><rect x="6.7422%" y="100" width="0.3580%" height="15" fill="rgb(235,30,7)" fg:x="113" fg:w="6"/><text x="6.9922%" y="110.50"></text></g><g><title>MBTA (manybodytensor/module.py:122) (2 samples, 0.12%)</title><rect x="7.1002%" y="100" width="0.1193%" height="15" fill="rgb(250,79,13)" fg:x="119" fg:w="2"/><text x="7.3502%" y="110.50"></text></g><g><title>ones (numpy/core/numeric.py:192) (2 samples, 0.12%)</title><rect x="7.1002%" y="116" width="0.1193%" height="15" fill="rgb(211,146,34)" fg:x="119" fg:w="2"/><text x="7.3502%" y="126.50"></text></g><g><title>MBTA (manybodytensor/module.py:123) (4 samples, 0.24%)</title><rect x="7.2196%" y="100" width="0.2387%" height="15" fill="rgb(228,22,38)" fg:x="121" fg:w="4"/><text x="7.4696%" y="110.50"></text></g><g><title>MBTA (manybodytensor/module.py:126) (200 samples, 11.93%)</title><rect x="7.4582%" y="100" width="11.9332%" height="15" fill="rgb(235,168,5)" fg:x="125" fg:w="200"/><text x="7.7082%" y="110.50">MBTA (manybodytens..</text></g><g><title>get_eta (manybodytensor/module.py:40) (200 samples, 11.93%)</title><rect x="7.4582%" y="116" width="11.9332%" height="15" fill="rgb(221,155,16)" fg:x="125" fg:w="200"/><text x="7.7082%" y="126.50">get_eta (manybodyt..</text></g><g><title>cumsum (numpy/core/fromnumeric.py:2586) (200 samples, 11.93%)</title><rect x="7.4582%" y="132" width="11.9332%" height="15" fill="rgb(215,215,53)" fg:x="125" fg:w="200"/><text x="7.7082%" y="142.50">cumsum (numpy/core..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (200 samples, 11.93%)</title><rect x="7.4582%" y="148" width="11.9332%" height="15" fill="rgb(223,4,10)" fg:x="125" fg:w="200"/><text x="7.7082%" y="158.50">_wrapfunc (numpy/c..</text></g><g><title>MBTA (manybodytensor/module.py:127) (4 samples, 0.24%)</title><rect x="19.3914%" y="100" width="0.2387%" height="15" fill="rgb(234,103,6)" fg:x="325" fg:w="4"/><text x="19.6414%" y="110.50"></text></g><g><title>take (numpy/core/fromnumeric.py:192) (4 samples, 0.24%)</title><rect x="19.3914%" y="116" width="0.2387%" height="15" fill="rgb(227,97,0)" fg:x="325" fg:w="4"/><text x="19.6414%" y="126.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (4 samples, 0.24%)</title><rect x="19.3914%" y="132" width="0.2387%" height="15" fill="rgb(234,150,53)" fg:x="325" fg:w="4"/><text x="19.6414%" y="142.50"></text></g><g><title>MBTA (manybodytensor/module.py:135) (35 samples, 2.09%)</title><rect x="19.6301%" y="100" width="2.0883%" height="15" fill="rgb(228,201,54)" fg:x="329" fg:w="35"/><text x="19.8801%" y="110.50">M..</text></g><g><title>kl (manybodytensor/module.py:24) (35 samples, 2.09%)</title><rect x="19.6301%" y="116" width="2.0883%" height="15" fill="rgb(222,22,37)" fg:x="329" fg:w="35"/><text x="19.8801%" y="126.50">k..</text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (10 samples, 0.60%)</title><rect x="21.1217%" y="132" width="0.5967%" height="15" fill="rgb(237,53,32)" fg:x="354" fg:w="10"/><text x="21.3717%" y="142.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (10 samples, 0.60%)</title><rect x="21.1217%" y="148" width="0.5967%" height="15" fill="rgb(233,25,53)" fg:x="354" fg:w="10"/><text x="21.3717%" y="158.50"></text></g><g><title>MBTA (manybodytensor/module.py:139) (4 samples, 0.24%)</title><rect x="21.7184%" y="100" width="0.2387%" height="15" fill="rgb(210,40,34)" fg:x="364" fg:w="4"/><text x="21.9684%" y="110.50"></text></g><g><title>tril_indices (numpy/lib/twodim_base.py:963) (4 samples, 0.24%)</title><rect x="21.7184%" y="116" width="0.2387%" height="15" fill="rgb(241,220,44)" fg:x="364" fg:w="4"/><text x="21.9684%" y="126.50"></text></g><g><title>&lt;genexpr&gt; (numpy/lib/twodim_base.py:963) (4 samples, 0.24%)</title><rect x="21.7184%" y="132" width="0.2387%" height="15" fill="rgb(235,28,35)" fg:x="364" fg:w="4"/><text x="21.9684%" y="142.50"></text></g><g><title>MBTA (manybodytensor/module.py:140) (7 samples, 0.42%)</title><rect x="21.9570%" y="100" width="0.4177%" height="15" fill="rgb(210,56,17)" fg:x="368" fg:w="7"/><text x="22.2070%" y="110.50"></text></g><g><title>MBTA (manybodytensor/module.py:141) (2 samples, 0.12%)</title><rect x="22.3747%" y="100" width="0.1193%" height="15" fill="rgb(224,130,29)" fg:x="375" fg:w="2"/><text x="22.6247%" y="110.50"></text></g><g><title>take (numpy/core/fromnumeric.py:192) (2 samples, 0.12%)</title><rect x="22.3747%" y="116" width="0.1193%" height="15" fill="rgb(235,212,8)" fg:x="375" fg:w="2"/><text x="22.6247%" y="126.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (2 samples, 0.12%)</title><rect x="22.3747%" y="132" width="0.1193%" height="15" fill="rgb(223,33,50)" fg:x="375" fg:w="2"/><text x="22.6247%" y="142.50"></text></g><g><title>MBTA (manybodytensor/module.py:143) (37 samples, 2.21%)</title><rect x="22.4940%" y="100" width="2.2076%" height="15" fill="rgb(219,149,13)" fg:x="377" fg:w="37"/><text x="22.7440%" y="110.50">M..</text></g><g><title>MBTA (manybodytensor/module.py:149) (442 samples, 26.37%)</title><rect x="24.7017%" y="100" width="26.3723%" height="15" fill="rgb(250,156,29)" fg:x="414" fg:w="442"/><text x="24.9517%" y="110.50">MBTA (manybodytensor/module.py:149)</text></g><g><title>get_eta (manybodytensor/module.py:40) (442 samples, 26.37%)</title><rect x="24.7017%" y="116" width="26.3723%" height="15" fill="rgb(216,193,19)" fg:x="414" fg:w="442"/><text x="24.9517%" y="126.50">get_eta (manybodytensor/module.py:40)</text></g><g><title>cumsum (numpy/core/fromnumeric.py:2586) (441 samples, 26.31%)</title><rect x="24.7613%" y="132" width="26.3126%" height="15" fill="rgb(216,135,14)" fg:x="415" fg:w="441"/><text x="25.0113%" y="142.50">cumsum (numpy/core/fromnumeric.py:2586)</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (441 samples, 26.31%)</title><rect x="24.7613%" y="148" width="26.3126%" height="15" fill="rgb(241,47,5)" fg:x="415" fg:w="441"/><text x="25.0113%" y="158.50">_wrapfunc (numpy/core/fromnumeric.py:59)</text></g><g><title>MBTA (manybodytensor/module.py:150) (10 samples, 0.60%)</title><rect x="51.0740%" y="100" width="0.5967%" height="15" fill="rgb(233,42,35)" fg:x="856" fg:w="10"/><text x="51.3240%" y="110.50"></text></g><g><title>take (numpy/core/fromnumeric.py:192) (10 samples, 0.60%)</title><rect x="51.0740%" y="116" width="0.5967%" height="15" fill="rgb(231,13,6)" fg:x="856" fg:w="10"/><text x="51.3240%" y="126.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (10 samples, 0.60%)</title><rect x="51.0740%" y="132" width="0.5967%" height="15" fill="rgb(207,181,40)" fg:x="856" fg:w="10"/><text x="51.3240%" y="142.50"></text></g><g><title>put (numpy/core/fromnumeric.py:530) (15 samples, 0.89%)</title><rect x="51.9093%" y="116" width="0.8950%" height="15" fill="rgb(254,173,49)" fg:x="870" fg:w="15"/><text x="52.1593%" y="126.50"></text></g><g><title>MBTA (manybodytensor/module.py:153) (64 samples, 3.82%)</title><rect x="51.6706%" y="100" width="3.8186%" height="15" fill="rgb(221,1,38)" fg:x="866" fg:w="64"/><text x="51.9206%" y="110.50">MBTA..</text></g><g><title>take (numpy/core/fromnumeric.py:192) (45 samples, 2.68%)</title><rect x="52.8043%" y="116" width="2.6850%" height="15" fill="rgb(206,124,46)" fg:x="885" fg:w="45"/><text x="53.0543%" y="126.50">ta..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (45 samples, 2.68%)</title><rect x="52.8043%" y="132" width="2.6850%" height="15" fill="rgb(249,21,11)" fg:x="885" fg:w="45"/><text x="53.0543%" y="142.50">_w..</text></g><g><title>MBTA (manybodytensor/module.py:154) (30 samples, 1.79%)</title><rect x="55.4893%" y="100" width="1.7900%" height="15" fill="rgb(222,201,40)" fg:x="930" fg:w="30"/><text x="55.7393%" y="110.50">M..</text></g><g><title>diag (numpy/lib/twodim_base.py:298) (2 samples, 0.12%)</title><rect x="57.1599%" y="116" width="0.1193%" height="15" fill="rgb(235,61,29)" fg:x="958" fg:w="2"/><text x="57.4099%" y="126.50"></text></g><g><title>MBTA (manybodytensor/module.py:159) (123 samples, 7.34%)</title><rect x="57.2792%" y="100" width="7.3389%" height="15" fill="rgb(219,207,3)" fg:x="960" fg:w="123"/><text x="57.5292%" y="110.50">MBTA (many..</text></g><g><title>solve (numpy/linalg/linalg.py:409) (123 samples, 7.34%)</title><rect x="57.2792%" y="116" width="7.3389%" height="15" fill="rgb(222,56,46)" fg:x="960" fg:w="123"/><text x="57.5292%" y="126.50">solve (num..</text></g><g><title>MBTA (manybodytensor/module.py:168) (473 samples, 28.22%)</title><rect x="64.7375%" y="100" width="28.2220%" height="15" fill="rgb(239,76,54)" fg:x="1085" fg:w="473"/><text x="64.9875%" y="110.50">MBTA (manybodytensor/module.py:168)</text></g><g><title>get_h (manybodytensor/module.py:57) (473 samples, 28.22%)</title><rect x="64.7375%" y="116" width="28.2220%" height="15" fill="rgb(231,124,27)" fg:x="1085" fg:w="473"/><text x="64.9875%" y="126.50">get_h (manybodytensor/module.py:57)</text></g><g><title>cumsum (numpy/core/fromnumeric.py:2586) (471 samples, 28.10%)</title><rect x="64.8568%" y="132" width="28.1026%" height="15" fill="rgb(249,195,6)" fg:x="1087" fg:w="471"/><text x="65.1068%" y="142.50">cumsum (numpy/core/fromnumeric.py:2586)</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (471 samples, 28.10%)</title><rect x="64.8568%" y="148" width="28.1026%" height="15" fill="rgb(237,174,47)" fg:x="1087" fg:w="471"/><text x="65.1068%" y="158.50">_wrapfunc (numpy/core/fromnumeric.py:59)</text></g><g><title>logsumexp (scipy/special/_logsumexp.py:100) (6 samples, 0.36%)</title><rect x="93.4368%" y="116" width="0.3580%" height="15" fill="rgb(206,201,31)" fg:x="1566" fg:w="6"/><text x="93.6868%" y="126.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2827) (6 samples, 0.36%)</title><rect x="93.4368%" y="132" width="0.3580%" height="15" fill="rgb(231,57,52)" fg:x="1566" fg:w="6"/><text x="93.6868%" y="142.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (6 samples, 0.36%)</title><rect x="93.4368%" y="148" width="0.3580%" height="15" fill="rgb(248,177,22)" fg:x="1566" fg:w="6"/><text x="93.6868%" y="158.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:111) (34 samples, 2.03%)</title><rect x="93.7947%" y="116" width="2.0286%" height="15" fill="rgb(215,211,37)" fg:x="1572" fg:w="34"/><text x="94.0447%" y="126.50">l..</text></g><g><title>MBTA (manybodytensor/module.py:176) (50 samples, 2.98%)</title><rect x="93.0191%" y="100" width="2.9833%" height="15" fill="rgb(241,128,51)" fg:x="1559" fg:w="50"/><text x="93.2691%" y="110.50">MBT..</text></g><g><title>logsumexp (scipy/special/_logsumexp.py:115) (3 samples, 0.18%)</title><rect x="95.8234%" y="116" width="0.1790%" height="15" fill="rgb(227,165,31)" fg:x="1606" fg:w="3"/><text x="96.0734%" y="126.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (3 samples, 0.18%)</title><rect x="95.8234%" y="132" width="0.1790%" height="15" fill="rgb(228,167,24)" fg:x="1606" fg:w="3"/><text x="96.0734%" y="142.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (3 samples, 0.18%)</title><rect x="95.8234%" y="148" width="0.1790%" height="15" fill="rgb(228,143,12)" fg:x="1606" fg:w="3"/><text x="96.0734%" y="158.50"></text></g><g><title>MBTA (manybodytensor/module.py:177) (17 samples, 1.01%)</title><rect x="96.0024%" y="100" width="1.0143%" height="15" fill="rgb(249,149,8)" fg:x="1609" fg:w="17"/><text x="96.2524%" y="110.50"></text></g><g><title>all (1,676 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(243,35,44)" fg:x="0" fg:w="1676"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (benchmark_random:6) (1,656 samples, 98.81%)</title><rect x="1.1933%" y="68" width="98.8067%" height="15" fill="rgb(246,89,9)" fg:x="20" fg:w="1656"/><text x="1.4433%" y="78.50">&lt;module&gt; (benchmark_random:6)</text></g><g><title>main (benchmark_random.py:27) (1,627 samples, 97.08%)</title><rect x="2.9236%" y="84" width="97.0764%" height="15" fill="rgb(233,213,13)" fg:x="49" fg:w="1627"/><text x="3.1736%" y="94.50">main (benchmark_random.py:27)</text></g><g><title>MBTA (manybodytensor/module.py:180) (50 samples, 2.98%)</title><rect x="97.0167%" y="100" width="2.9833%" height="15" fill="rgb(233,141,41)" fg:x="1626" fg:w="50"/><text x="97.2667%" y="110.50">MBT..</text></g><g><title>kl (manybodytensor/module.py:24) (50 samples, 2.98%)</title><rect x="97.0167%" y="116" width="2.9833%" height="15" fill="rgb(239,167,4)" fg:x="1626" fg:w="50"/><text x="97.2667%" y="126.50">kl ..</text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (7 samples, 0.42%)</title><rect x="99.5823%" y="132" width="0.4177%" height="15" fill="rgb(209,217,16)" fg:x="1669" fg:w="7"/><text x="99.8323%" y="142.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (7 samples, 0.42%)</title><rect x="99.5823%" y="148" width="0.4177%" height="15" fill="rgb(219,88,35)" fg:x="1669" fg:w="7"/><text x="99.8323%" y="158.50"></text></g></svg></svg>